name: Continuous Integration

on:
  push:
    branches:
      - master
      - 2.x
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

env:
  APP_ENV: ${{ secrets.APP_ENV }}
  MAILER_DSN: ${{ secrets.MAILER_DSN }}
  MAILER_USER: ${{ secrets.MAILER_USER }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  TRANSLOADIT_KEY: ${{ secrets.TRANSLOADIT_KEY }}
  TRANSLOADIT_SECRET: ${{ secrets.TRANSLOADIT_SECRET }}
  TRANSLOADIT_DELIVERY: 1

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: 3lever/php:8.1.8-fpm-postgresql-dev
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/symfony.lock') }}-${{ hashFiles('**/composer.lock') }}
          path: |
            bin/.phpunit
            vendor
            node_modules
            public
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/symfony.lock') }}-
            ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Composer
        run: composer dev

      - name: Webpack
        run: yarn dev

      - name: Phpunit version
        run: bin/phpunit --version

  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        command:
          - 'phpstan'
          - 'ecs'
          - 'container'
          - 'rector'
          - 'twig'
    needs: build
    container:
      image: 3lever/php:8.1.8-fpm-postgresql-dev
    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: myprofile
          POSTGRES_PASSWORD: 123456
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/symfony.lock') }}-${{ hashFiles('**/composer.lock') }}
          path: |
            bin/.phpunit
            vendor
            node_modules
            public

      - name: Setup Database
        run: composer db

      - name: Fixtures
        run: composer db:fixtures

      - name: See files
        run: |
          pwd
          ls -lha

      - name: Checking ${{ matrix.command }}
        run: composer lint:${{ matrix.command }}

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: build
    env:
      APP_ENV: test
      MAILER_DSN: null://null
      XDEBUG_MODE: coverage
    container:
      image: 3lever/php:8.1.8-fpm-postgresql-dev
    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: myprofile
          POSTGRES_PASSWORD: 123456
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/symfony.lock') }}-${{ hashFiles('**/composer.lock') }}
          path: |
            bin/.phpunit
            vendor
            node_modules
            public

      - name: Setup Database
        run: composer db

      - name: Fixtures
        run: composer db:fixtures

      - name: See files
        run: |
          pwd
          ls -lha

      - name: Run Tests
        run: composer test

      - name: Validate database schema
        run: composer db:validate

      - name: Codecov
        uses: codecov/codecov-action@v1

  deploy_pr:
    name: Deploy - Pull request
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    environment:
      name: staging_pr
      url: https://${{env.APP_NAME}}.herokuapp.com
    env:
      APP_NAME: my-profile-pr-${{ github.event.number }}
    needs:
      - lint
      - test
    container:
      image: 3lever/php:8.1.8-fpm-postgresql-dev
    steps:
        - uses: actions/checkout@v2
        - uses: rlespinasse/github-slug-action@v3.x

        - uses: actions/cache@v2
          with:
            key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/symfony.lock') }}-${{ hashFiles('**/composer.lock') }}
            path: |
              bin/.phpunit
              vendor
              node_modules
              public

        - name: See files
          run: |
            pwd
            ls -lha
            ls -lha vendor

        - name: Web deploy
          uses: akhileshns/heroku-deploy@v3.12.12
          with:
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: $APP_NAME
            heroku_email: ${{secrets.HEROKU_EMAIL}}
            usedocker: true
            buildpack: "https://github.com/DataDog/heroku-buildpack-datadog.git"
            docker_build_args: |
              APP_ENV
              APP_DEBUG
              GIT_REF
              MAILER_DSN
              MAILER_USER
              SENTRY_DSN
              TRANSLOADIT_KEY
              TRANSLOADIT_SECRET
              TRANSLOADIT_DELIVERY
          env:
            APP_DEBUG: false
            GIT_REF: ${{ env.GITHUB_REF_SLUG }}
            DD_API_KEY: ${{secrets.DD_API_KEY}}
            DD_AGENT_MAJOR_VERSION: 7
            DD_SITE: datadoghq.com

        - name: Create Database
          continue-on-error: true
          run:  heroku addons:create heroku-postgresql --app $APP_NAME --name postgresql-$APP_NAME

        - name: Migrations
          run: heroku run --app $APP_NAME composer db:migration:apply

        - name: Fixtures
          run: heroku run --app $APP_NAME composer db:fixtures
