name: Resume

on:
    discussion:
        types: [created, edited]
    pull_request:
        types: [labeled]

jobs:
    execute:
        name: Initial checks
        if: github.event_name == 'discussion' || github.event.label.name == 'template'
        runs-on: ubuntu-latest
        steps:
            - run: echo "make github happy :)"

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: execute
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 19

            - name: cache
              id: cache-frontend
              uses: actions/cache@v3
              with:
                  key: frontend-${{ hashFiles('**/package-lock.json') }}
                  path: |
                      node_modules
                      .cache
                  restore-keys: |
                      frontend-

            - run: npm install

    pdf:
        runs-on: ubuntu-latest
        needs: build
        name: Generate pdf
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 19

            - uses: actions/cache@v3
              with:
                  key: frontend-${{ hashFiles('**/package-lock.json') }}
                  path: |
                      node_modules
                      .cache
                  restore-keys: |
                      frontend-

            # Process from discussion.
            - name: Get content from discussion's description
              if: github.event_name == 'discussion'
              uses: DamianReeves/write-file-action@master
              with:
                  path: ./data/data.txt
                  contents: ${{github.event.discussion.body}}
            - run: |
                npm run node:generate:data
                npm run lint:check:yaml
              if: github.event_name == 'discussion'

            # Process from pull request.
            - run: npm run node:copy-data
              if: github.event_name == 'pull_request'

            - run: npm run node:generate:json
            - run: npm run build

            - name: Generate pdf
              run: |
                  python3 -m http.server --directory dist &> /dev/null &
                  pid=$!
                  sleep 1
                  npm run node:generate:pdf
                  kill "${pid}"

            -   name: Upload resume to bucket
                run: |
                    python -m pip install --upgrade pip
                    pip install awscli
                    aws s3 cp ./data/pdf s3://users/${{github.event.actor}} --endpoint-url  ${{env.ENDPOINT_URL}} --recursive
                env:
                    AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
                    AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
                    ENDPOINT_URL: https://${{secrets.CLOUDFLARE_ACCOUNT_ID}}.r2.cloudflarestorage.com/myprofile
