name: Build

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  build-backend:
    name: Backend
    environment: ${{inputs.environment}}
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://myprofile:123456@localhost:5432/myprofile
      APP_ENV: ${{ secrets.APP_ENV }}
    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: myprofile
          POSTGRES_PASSWORD: 123456
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - run: echo $APP_ENV  ${{ secrets.APP_ENV }}
      - uses: actions/checkout@v3

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer

      - name: Cache backend
        id: cache-backend
        uses: actions/cache@v3
        with:
          key: backend-$APP_ENV-${{ hashFiles('**/symfony.lock') }}-${{ hashFiles('**/composer.lock') }}
          path: |
            bin/.phpunit
            vendor
            var
          restore-keys: |
            backend-$APP_ENV-${{ hashFiles('**/symfony.lock') }}-
            backend-$APP_ENV-
            backend-

      - name: Composer
        run: composer $APP_ENV
       
      - run: bin/console cache:warmup

  build-frontend:
    name: Frontend
    environment: ${{inputs.environment}}
    runs-on: ubuntu-latest
    env:
      APP_ENV: ${{ secrets.APP_ENV }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3

      - name: Cache frontend
        id: cache-frontend
        uses: actions/cache@v3
        with:
          key: frontend-$APP_ENV-${{ hashFiles('**/package-lock.json') }}
          path: |
            node_modules
            public
          restore-keys: |
            frontend-$APP_ENV-
            frontend-

      - name: Npm
        run: npm run $APP_ENV

